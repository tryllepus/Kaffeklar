@page "/"
@inject CoffeeService CoffeeService
@implements IDisposable

<div class="date-timer-section">
    @switch (powerStatus)
    {
        case PowerStatus.ON:
            <MudAlert Severity="Severity.Info">
                <div>
                    Kaffemaskinen er tændt
                </div>
                @if (CoffeeService.Processing)
                {
                    <div>
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    </div>
                }
            </MudAlert>
            break;
        case PowerStatus.OFF:
            <MudAlert Severity="Severity.Info">
                <div>
                    Kaffemaskinen er slukket
                </div>
                @if (CoffeeService.Processing)
                {
                    <div>
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    </div>
                }
            </MudAlert>
            break;
        case PowerStatus.UNKNOWN:
            <MudAlert Severity="Severity.Info">
                <div>
                    Der er ikke oprettet forbindelse til kaffemaskinen
                </div>
                @if (CoffeeService.Processing)
                {
                    <div>
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    </div>
                }
            </MudAlert>
            break;
    }
    <MudTimePicker 
        PickerVariant="PickerVariant.Static" 
        Color="Color.Dark"
        Rounded="true"
        ToolbarClass="timer-picker-toolbar"
        MinuteSelectionStep="5"
        @bind-time="@CoffeeService.CurrentTime" Class="time-picker">
    </MudTimePicker>
    <div class="picker-actions">      
        @if (CoffeeService.StartPressed)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
        }
        else
        {
            <MudButton Style="background-color: #8D6E63; color: white;"
                       OnClick="@CoffeeService.StartCoffeeMachine"
                       Disabled="!(powerStatus == PowerStatus.OFF)">
                Sæt timer
            </MudButton>
        }
        @if (CoffeeService.StopPressed)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
        }
        else
        {
            <MudButton Style="background-color: #8D6E63; color: white;"
                       OnClick="@CoffeeService.StopCoffeeMachine"
                       Disabled="!(powerStatus == PowerStatus.OFF)">
                Stop kaffemaskine
            </MudButton>
        }
    </div>
</div>

@code{
    private PowerStatus powerStatus;

    protected override void OnInitialized()
    {
        char[] separators = new char[] { ':', '.' };
        var tempTime = DateTime.Now.ToLocalTime().ToString("HH:mm").Split(separators);

        CoffeeService.CurrentTime = new TimeSpan(Int32.Parse(tempTime[0]), Int32.Parse(tempTime[1]), 00);
        Log.Information($"Time: {CoffeeService.CurrentTime}");

        CoffeeService.PowerChanged += OnPowerStatusChanged;

        CoffeeService.GetCoffeeMachineStatus();
    }

    private void OnPowerStatusChanged(PowerStatus newStatus){
        powerStatus = newStatus;
        StateHasChanged();
    }

    public void Dispose(){
        CoffeeService.PowerChanged -= OnPowerStatusChanged;
    }
}